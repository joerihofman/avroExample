/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package nl.joerihofman.avroexample;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
/** An example for using Avro */
@org.apache.avro.specific.AvroGenerated
public class AvroExampleRecord extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 1520370659781485309L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AvroExampleRecord\",\"namespace\":\"nl.joerihofman.avroexample\",\"doc\":\"An example for using Avro\",\"fields\":[{\"name\":\"stringField\",\"type\":\"string\"},{\"name\":\"intField\",\"type\":\"int\"},{\"name\":\"stringFieldTwo\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<AvroExampleRecord> ENCODER =
      new BinaryMessageEncoder<AvroExampleRecord>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<AvroExampleRecord> DECODER =
      new BinaryMessageDecoder<AvroExampleRecord>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<AvroExampleRecord> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<AvroExampleRecord> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<AvroExampleRecord>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this AvroExampleRecord to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a AvroExampleRecord from a ByteBuffer. */
  public static AvroExampleRecord fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence stringField;
  @Deprecated public int intField;
  @Deprecated public java.lang.CharSequence stringFieldTwo;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public AvroExampleRecord() {}

  /**
   * All-args constructor.
   * @param stringField The new value for stringField
   * @param intField The new value for intField
   * @param stringFieldTwo The new value for stringFieldTwo
   */
  public AvroExampleRecord(java.lang.CharSequence stringField, java.lang.Integer intField, java.lang.CharSequence stringFieldTwo) {
    this.stringField = stringField;
    this.intField = intField;
    this.stringFieldTwo = stringFieldTwo;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return stringField;
    case 1: return intField;
    case 2: return stringFieldTwo;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: stringField = (java.lang.CharSequence)value$; break;
    case 1: intField = (java.lang.Integer)value$; break;
    case 2: stringFieldTwo = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'stringField' field.
   * @return The value of the 'stringField' field.
   */
  public java.lang.CharSequence getStringField() {
    return stringField;
  }

  /**
   * Sets the value of the 'stringField' field.
   * @param value the value to set.
   */
  public void setStringField(java.lang.CharSequence value) {
    this.stringField = value;
  }

  /**
   * Gets the value of the 'intField' field.
   * @return The value of the 'intField' field.
   */
  public java.lang.Integer getIntField() {
    return intField;
  }

  /**
   * Sets the value of the 'intField' field.
   * @param value the value to set.
   */
  public void setIntField(java.lang.Integer value) {
    this.intField = value;
  }

  /**
   * Gets the value of the 'stringFieldTwo' field.
   * @return The value of the 'stringFieldTwo' field.
   */
  public java.lang.CharSequence getStringFieldTwo() {
    return stringFieldTwo;
  }

  /**
   * Sets the value of the 'stringFieldTwo' field.
   * @param value the value to set.
   */
  public void setStringFieldTwo(java.lang.CharSequence value) {
    this.stringFieldTwo = value;
  }

  /**
   * Creates a new AvroExampleRecord RecordBuilder.
   * @return A new AvroExampleRecord RecordBuilder
   */
  public static nl.joerihofman.avroexample.AvroExampleRecord.Builder newBuilder() {
    return new nl.joerihofman.avroexample.AvroExampleRecord.Builder();
  }

  /**
   * Creates a new AvroExampleRecord RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new AvroExampleRecord RecordBuilder
   */
  public static nl.joerihofman.avroexample.AvroExampleRecord.Builder newBuilder(nl.joerihofman.avroexample.AvroExampleRecord.Builder other) {
    return new nl.joerihofman.avroexample.AvroExampleRecord.Builder(other);
  }

  /**
   * Creates a new AvroExampleRecord RecordBuilder by copying an existing AvroExampleRecord instance.
   * @param other The existing instance to copy.
   * @return A new AvroExampleRecord RecordBuilder
   */
  public static nl.joerihofman.avroexample.AvroExampleRecord.Builder newBuilder(nl.joerihofman.avroexample.AvroExampleRecord other) {
    return new nl.joerihofman.avroexample.AvroExampleRecord.Builder(other);
  }

  /**
   * RecordBuilder for AvroExampleRecord instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AvroExampleRecord>
    implements org.apache.avro.data.RecordBuilder<AvroExampleRecord> {

    private java.lang.CharSequence stringField;
    private int intField;
    private java.lang.CharSequence stringFieldTwo;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(nl.joerihofman.avroexample.AvroExampleRecord.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.stringField)) {
        this.stringField = data().deepCopy(fields()[0].schema(), other.stringField);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.intField)) {
        this.intField = data().deepCopy(fields()[1].schema(), other.intField);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.stringFieldTwo)) {
        this.stringFieldTwo = data().deepCopy(fields()[2].schema(), other.stringFieldTwo);
        fieldSetFlags()[2] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing AvroExampleRecord instance
     * @param other The existing instance to copy.
     */
    private Builder(nl.joerihofman.avroexample.AvroExampleRecord other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.stringField)) {
        this.stringField = data().deepCopy(fields()[0].schema(), other.stringField);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.intField)) {
        this.intField = data().deepCopy(fields()[1].schema(), other.intField);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.stringFieldTwo)) {
        this.stringFieldTwo = data().deepCopy(fields()[2].schema(), other.stringFieldTwo);
        fieldSetFlags()[2] = true;
      }
    }

    /**
      * Gets the value of the 'stringField' field.
      * @return The value.
      */
    public java.lang.CharSequence getStringField() {
      return stringField;
    }

    /**
      * Sets the value of the 'stringField' field.
      * @param value The value of 'stringField'.
      * @return This builder.
      */
    public nl.joerihofman.avroexample.AvroExampleRecord.Builder setStringField(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.stringField = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'stringField' field has been set.
      * @return True if the 'stringField' field has been set, false otherwise.
      */
    public boolean hasStringField() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'stringField' field.
      * @return This builder.
      */
    public nl.joerihofman.avroexample.AvroExampleRecord.Builder clearStringField() {
      stringField = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'intField' field.
      * @return The value.
      */
    public java.lang.Integer getIntField() {
      return intField;
    }

    /**
      * Sets the value of the 'intField' field.
      * @param value The value of 'intField'.
      * @return This builder.
      */
    public nl.joerihofman.avroexample.AvroExampleRecord.Builder setIntField(int value) {
      validate(fields()[1], value);
      this.intField = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'intField' field has been set.
      * @return True if the 'intField' field has been set, false otherwise.
      */
    public boolean hasIntField() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'intField' field.
      * @return This builder.
      */
    public nl.joerihofman.avroexample.AvroExampleRecord.Builder clearIntField() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'stringFieldTwo' field.
      * @return The value.
      */
    public java.lang.CharSequence getStringFieldTwo() {
      return stringFieldTwo;
    }

    /**
      * Sets the value of the 'stringFieldTwo' field.
      * @param value The value of 'stringFieldTwo'.
      * @return This builder.
      */
    public nl.joerihofman.avroexample.AvroExampleRecord.Builder setStringFieldTwo(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.stringFieldTwo = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'stringFieldTwo' field has been set.
      * @return True if the 'stringFieldTwo' field has been set, false otherwise.
      */
    public boolean hasStringFieldTwo() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'stringFieldTwo' field.
      * @return This builder.
      */
    public nl.joerihofman.avroexample.AvroExampleRecord.Builder clearStringFieldTwo() {
      stringFieldTwo = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public AvroExampleRecord build() {
      try {
        AvroExampleRecord record = new AvroExampleRecord();
        record.stringField = fieldSetFlags()[0] ? this.stringField : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.intField = fieldSetFlags()[1] ? this.intField : (java.lang.Integer) defaultValue(fields()[1]);
        record.stringFieldTwo = fieldSetFlags()[2] ? this.stringFieldTwo : (java.lang.CharSequence) defaultValue(fields()[2]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<AvroExampleRecord>
    WRITER$ = (org.apache.avro.io.DatumWriter<AvroExampleRecord>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<AvroExampleRecord>
    READER$ = (org.apache.avro.io.DatumReader<AvroExampleRecord>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
